name: SonarCloud
on:
  push:
    paths-ignore:
      - '**/*.md'
      - 'mkdocs.yml'
      - 'docs/**/*'
    branches: [ main ]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Hexalith_Hexalith.ExternalSystems" /o:"hexalith" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build './src/Domain/Hexalith.ExternalSystems.Domain.Abstractions/Hexalith.ExternalSystems.Domain.Abstractions.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Domain/Hexalith.ExternalSystems.Events/Hexalith.ExternalSystems.Events.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Domain/Hexalith.ExternalSystems.Domain/Hexalith.ExternalSystems.Domain.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Application/Hexalith.ExternalSystems.Commands/Hexalith.ExternalSystems.Commands.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Application/Hexalith.ExternalSystems.Application/Hexalith.ExternalSystems.Application.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Infrastructure/Hexalith.ExternalSystems.CommandsWebApis/Hexalith.ExternalSystems.CommandsWebApis.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Infrastructure/Hexalith.ExternalSystems.DaprRuntime/Hexalith.ExternalSystems.DaprRuntime.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Infrastructure/Hexalith.ExternalSystems.DaprRuntime.Abstractions/Hexalith.ExternalSystems.DaprRuntime.Abstractions.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Infrastructure/Hexalith.ExternalSystems.EventsWebApis/Hexalith.ExternalSystems.EventsWebApis.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/UI/Hexalith.Inventories.UI/Hexalith.Inventories.UI.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          dotnet build './src/Servers/Hexalith.Server.Inventories/Hexalith.Server.Inventories.csproj' --configuration Release -p:Version=${{ env.VERSION }}
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"